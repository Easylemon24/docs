import{_ as e,c as t,o,a5 as a}from"./chunks/framework.Cl2Ecfyq.js";const n="/assets/configurable-group.44ZEZyg6.png",i="/assets/configurable-option-create.DQqtH3hy.png",r="/assets/configurable-option.BmHAXU0q.png",p="/assets/configurable-option-input.Dbw1hFmS.png",w=JSON.parse('{"title":"Configurable Options","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guides/config-options.md","filePath":"docs/guides/config-options.md"}'),s={name:"docs/guides/config-options.md"},c=a('<h1 id="configurable-options" tabindex="-1">Configurable Options <a class="header-anchor" href="#configurable-options" aria-label="Permalink to &quot;Configurable Options&quot;">​</a></h1><p>Configurable options are a powerfull feature which lets your client customize their product. You can create configurable options for any product.</p><h2 id="how-to-create-a-configurable-option" tabindex="-1">How to create a configurable option <a class="header-anchor" href="#how-to-create-a-configurable-option" aria-label="Permalink to &quot;How to create a configurable option&quot;">​</a></h2><p>In this guide we&#39;ll create a configurable option for a Pterodactyl server. The configurable option will allow the client to select the type of server they want to order.</p><h2 id="step-1-create-the-configurable-option" tabindex="-1">Step 1: Create the configurable option <a class="header-anchor" href="#step-1-create-the-configurable-option" aria-label="Permalink to &quot;Step 1: Create the configurable option&quot;">​</a></h2><p>First we need to create the configurable option. Go to the admin panel and navigate to <code>Configurable Options</code> and click on <code>Create Configurable Option Group</code>.</p><p>Example <img src="'+n+'" alt="image"></p><h2 id="step-2-create-the-options" tabindex="-1">Step 2: Create the options <a class="header-anchor" href="#step-2-create-the-options" aria-label="Permalink to &quot;Step 2: Create the options&quot;">​</a></h2><p>Now we need to create the options for the configurable option. Click on <code>Create new option</code> and fill in the name.</p><p>It is important to set the name to <code>egg| &lt;Your Display Name&gt;</code> this is important for pterodactyl to know what variable to use.</p><p>For a full list of names checkout the <a href="./../extensions/pterodactyl">Pterodactyl guide</a></p><p>Example <img src="'+i+'" alt="image"></p><h2 id="step-3-making-inputs" tabindex="-1">Step 3: Making inputs <a class="header-anchor" href="#step-3-making-inputs" aria-label="Permalink to &quot;Step 3: Making inputs&quot;">​</a></h2><p>Now we need to create the inputs for the configurable option. Click on <code>Create new input</code>.</p><p>We want a input for Forge and Paper. So we need to create 2 inputs.</p><p>Example <img src="'+r+'" alt="image"></p><h2 id="step-4-updating-the-names-and-prices" tabindex="-1">Step 4: Updating the names and prices <a class="header-anchor" href="#step-4-updating-the-names-and-prices" aria-label="Permalink to &quot;Step 4: Updating the names and prices&quot;">​</a></h2><p>Configurable inputs have a name and a price. The name follows the same rules as the name of the configurable option.</p><p>So in my case paper has a id of 1 and forge has a id of 2. The name of the input should be <code>&lt;ID&gt; | &lt;Your Display Name&gt;</code></p><p>Example <img src="'+p+'" alt="image"></p>',20),l=[c];function h(d,u,g,f,m,b){return o(),t("div",null,l)}const C=e(s,[["render",h]]);export{w as __pageData,C as default};
